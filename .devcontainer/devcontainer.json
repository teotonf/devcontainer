{
	"name": "My-Ubuntu",
	"dockerComposeFile": "${localWorkspaceFolder}/compose/docker-compose.yaml",
	"service": "my-dev-container",
	"features": {
		"ghcr.io/devcontainers-contrib/features/zsh-plugins:0": {
			"omzPlugins": "https://github.com/zsh-users/zsh-autosuggestions https://github.com/zsh-users/zsh-syntax-highlighting.git",
			"plugins": "z zsh-autosuggestions zsh-syntax-highlighting"
		},
		"ghcr.io/stuartleeks/dev-container-features/shell-history:0": {},
		"ghcr.io/nils-geistmann/devcontainers-features/zsh:0": {},
		"ghcr.io/devcontainers/features/common-utils:2": {
			"configureZshAsDefaultShell": true,
			"username": "${localEnv:USER}"
		}
	},
	"mounts": [
		"source=${localEnv:CERTIFICATES_LOCATION},target=/home/${localEnv:USER}/certificates,type=bind,consistency=cached",
		"source=${localWorkspaceFolder}/.devcontainer/postCreateCmds.sh,target=/home/${localEnv:USER}/postCreate.sh,type=bind,consistency=cached",
		"source=${localWorkspaceFolder}/.devcontainer/postStartCmds.sh,target=/home/${localEnv:USER}/postStart.sh,type=bind,consistency=cached",
		"source=${localEnv:DEVOPS_WORKSPACE},target=/home/${localEnv:USER}/workspace,type=bind,consistency=cached",
		"source=${localWorkspaceFolder}/vault.json,target=/home/${localEnv:USER}/vault.json,type=bind,consistency=cached"
	],
	"workspaceFolder": "/home/${localEnv:USER}/workspace",
	"containerUser": "${localEnv:USER}",
	"remoteUser": "${localEnv:USER}",
	"customizations": {
		"vscode": {
			"extensions": [
				"ms-azuretools.vscode-azureterraform",
				"hashicorp.terraform",
				"johnpapa.vscode-peacock",
				"hediet.vscode-drawio"
			]
		}
	},
	"postCreateCommand": "sh -c /home/${localEnv:USER}/postCreate.sh",
	"postStartCommand": "sh -c /home/${localEnv:USER}/postStart.sh",
	"containerEnv": {
		"DOCKER_CERT_PATH": "/home/${localEnv:USER}/certificates/docker",
		"DOCKER_HOST": "tcp://192.168.0.3:2376",
		"DOCKER_TLS": "1",
		"DOCKER_TLS_VERIFY": "1",
		"NOTE_IP": "192.168.0.7",
		"HOST_DEVOPS_WORKSPACE": "${localEnv:DEVOPS_WORKSPACE}",
		"HOST_CERTIFICATES_LOCATION": "${localEnv:CERTIFICATES_LOCATION}"
	}
}